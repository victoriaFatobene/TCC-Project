
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  description: 'description',
  imageUrl: 'imageUrl',
  created_at: 'created_at',
  updated_at: 'updated_at',
  categoryId: 'categoryId'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  table: 'table',
  name: 'name',
  statusId: 'statusId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ItemScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  created_at: 'created_at',
  updated_at: 'updated_at',
  orderId: 'orderId',
  productId: 'productId'
};

exports.Prisma.MenuItemScalarFieldEnum = {
  id: 'id',
  name: 'name',
  imageUrl: 'imageUrl',
  description: 'description',
  price: 'price',
  categoryId: 'categoryId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ItemModificationScalarFieldEnum = {
  id: 'id',
  type: 'type',
  createdAt: 'createdAt',
  itemId: 'itemId',
  ingredientId: 'ingredientId'
};

exports.Prisma.ProductIngredientScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  ingredientId: 'ingredientId',
  createdAt: 'createdAt'
};

exports.Prisma.CategoryViewScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  userId: 'userId',
  categoryId: 'categoryId'
};

exports.Prisma.IngredientScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StatusScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Category: 'Category',
  Product: 'Product',
  Order: 'Order',
  Item: 'Item',
  MenuItem: 'MenuItem',
  ItemModification: 'ItemModification',
  ProductIngredient: 'ProductIngredient',
  CategoryView: 'CategoryView',
  Ingredient: 'Ingredient',
  Status: 'Status'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\SENAI\\Desktop\\TCC-Project\\backend\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\SENAI\\Desktop\\TCC-Project\\backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\n//informações\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n//tabela User(Salva os emails cadastrados)\nmodel User {\n  id         String   @id @default(uuid())\n  name       String\n  email      String   @unique\n  password   String\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n\n  // Relação com CategoryView\n  categoryViews CategoryView[]\n\n  @@map(\"users\")\n}\n\n//Categorias(mostra o tipo do produto)\nmodel Category {\n  id         String   @id @default(uuid())\n  name       String\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n\n  // Relações\n  products      Product[]\n  categoryViews CategoryView[]\n  menuItems     MenuItem[] // Relação com a tabela MenuItem\n\n  @@map(\"categories\")\n}\n\n//Tabela de produtos(mostra as informações do produto)\nmodel Product {\n  id          String   @id @default(uuid())\n  name        String\n  price       Float\n  description String\n  imageUrl    String\n  created_at  DateTime @default(now())\n  updated_at  DateTime @updatedAt\n\n  // Relação com a categoria\n  category   Category @relation(fields: [categoryId], references: [id])\n  categoryId String\n\n  // Relação com a tabela de ingredientes\n  productIngredients ProductIngredient[]\n\n  // Relação com Item pedidos\n  items Item[]\n\n  @@map(\"products\")\n}\n\n//Tabela de Pedido(mostra o numero do pedido)\nmodel Order {\n  id    String  @id @default(uuid())\n  table Int\n  name  String?\n\n  //relaciona com a tabela de status\n  status   Status @relation(fields: [statusId], references: [id])\n  statusId String\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  //Relação com a tabela Item\n  items Item[]\n\n  @@map(\"orders\")\n}\n\n//Tabela de quantidade de itens\nmodel Item {\n  id         String   @id @default(uuid())\n  amount     Int\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n\n  // Relação com Order e chave estrangeira\n  order   Order  @relation(fields: [orderId], references: [id])\n  orderId String\n\n  // Relação com Product e chave estrangeira\n  product   Product @relation(fields: [productId], references: [id])\n  productId String\n\n  // Relação com modif icações de item\n  modifications ItemModification[]\n\n  @@map(\"items\")\n}\n\n// TABELAS NOVAS!!!!!\n\n//Tabela de MenuItem - mostra os itens individuais do cardápio(pizzas, bebidas, rodizios, etc.)\nmodel MenuItem {\n  id          String @id @default(uuid())\n  name        String\n  imageUrl    String\n  description String\n  price       Float\n\n  categoryId String\n  category   Category @relation(fields: [categoryId], references: [id])\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"menu_items\")\n}\n\n// Tabela de modificação de item - Esta é a tabela que registra as alterações do cliente\nmodel ItemModification {\n  id        String   @id @default(uuid())\n  type      String\n  createdAt DateTime @default(now())\n\n  // Relação com o Item do pedido\n  item   Item   @relation(fields: [itemId], references: [id])\n  itemId String\n\n  // Relação com o ingrediente que foi modificado\n  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])\n  ingredientId String\n\n  @@map(\"item_modifications\")\n}\n\n//Tabela de Produto_Ingrediente - Tabela que junta os produtos com os ingredientes\nmodel ProductIngredient {\n  id           String   @id @default(uuid())\n  productId    String\n  ingredientId String\n  createdAt    DateTime @default(now())\n\n  product    Product    @relation(fields: [productId], references: [id])\n  ingredient Ingredient @relation(fields: [ingredientId], references: [id])\n\n  // Para garantir que não haja ingredientes duplicados para o mesmo produto\n  @@unique([productId, ingredientId])\n  @@map(\"product_ingredients\")\n}\n\n// Tabela da categoria que o cliente entrou\nmodel CategoryView {\n  id        String   @id @default(uuid())\n  createdAt DateTime @default(now())\n\n  // Relação com o User, que representa o cliente\n  user   User   @relation(fields: [userId], references: [id])\n  userId String\n\n  // Relação com a categoria que foi visualizada\n  category   Category @relation(fields: [categoryId], references: [id])\n  categoryId String\n\n  @@map(\"category_views\")\n}\n\n//Tabela de Ingredientes - mostra os ingredientes que podem ser adcionados ou removidos dos itens do pedido\nmodel Ingredient {\n  id        String   @id @default(uuid())\n  name      String\n  price     Float\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  //se relaciona com produtos e modificações de item\n  productIngredients ProductIngredient[]\n  itemModifications  ItemModification[]\n\n  @@map(\"ingredients\")\n}\n\n//Tabela de Status - mostra o status de preparo do pedido\nmodel Status {\n  id   String @id @default(uuid())\n  name String\n\n  //Se relaciona um status a vários pedidos\n  orders Order[]\n\n  @@map(\"status\")\n}\n",
  "inlineSchemaHash": "514b2160fc9379bd810c34b0f59e8846f5739922d05a6ec762a40f8c635bbb47",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"categoryViews\",\"kind\":\"object\",\"type\":\"CategoryView\",\"relationName\":\"CategoryViewToUser\"}],\"dbName\":\"users\"},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CategoryToProduct\"},{\"name\":\"categoryViews\",\"kind\":\"object\",\"type\":\"CategoryView\",\"relationName\":\"CategoryToCategoryView\"},{\"name\":\"menuItems\",\"kind\":\"object\",\"type\":\"MenuItem\",\"relationName\":\"CategoryToMenuItem\"}],\"dbName\":\"categories\"},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToProduct\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productIngredients\",\"kind\":\"object\",\"type\":\"ProductIngredient\",\"relationName\":\"ProductToProductIngredient\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"Item\",\"relationName\":\"ItemToProduct\"}],\"dbName\":\"products\"},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"table\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"object\",\"type\":\"Status\",\"relationName\":\"OrderToStatus\"},{\"name\":\"statusId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"Item\",\"relationName\":\"ItemToOrder\"}],\"dbName\":\"orders\"},\"Item\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"ItemToOrder\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ItemToProduct\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modifications\",\"kind\":\"object\",\"type\":\"ItemModification\",\"relationName\":\"ItemToItemModification\"}],\"dbName\":\"items\"},\"MenuItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToMenuItem\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"menu_items\"},\"ItemModification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"item\",\"kind\":\"object\",\"type\":\"Item\",\"relationName\":\"ItemToItemModification\"},{\"name\":\"itemId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ingredient\",\"kind\":\"object\",\"type\":\"Ingredient\",\"relationName\":\"IngredientToItemModification\"},{\"name\":\"ingredientId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"item_modifications\"},\"ProductIngredient\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ingredientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductIngredient\"},{\"name\":\"ingredient\",\"kind\":\"object\",\"type\":\"Ingredient\",\"relationName\":\"IngredientToProductIngredient\"}],\"dbName\":\"product_ingredients\"},\"CategoryView\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CategoryViewToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToCategoryView\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"category_views\"},\"Ingredient\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"productIngredients\",\"kind\":\"object\",\"type\":\"ProductIngredient\",\"relationName\":\"IngredientToProductIngredient\"},{\"name\":\"itemModifications\",\"kind\":\"object\",\"type\":\"ItemModification\",\"relationName\":\"IngredientToItemModification\"}],\"dbName\":\"ingredients\"},\"Status\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToStatus\"}],\"dbName\":\"status\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

